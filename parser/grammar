Prog: Main "{" Classe "}"
Main: class Identifier "{" public static void main "(" Identifier

terminals
class: class;
public: public;
static: static;
void: void;
main: main;
Identifier: /[a-zA-Z_][_a-zA-Z0-9]*/;
Number: /\d+(\.\d+)?/;


MAIN  class id '{' public static void main ( String [ ] id ) '{'
CMD '}' '}'
CLASSE  class id [extends id] '{' {VAR} {METODO} '}'
VAR  TIPO id ;
METODO  public TIPO id '(' [PARAMS] ')' '{' {VAR} {CMD} return EXP ;
'}'
PARAMS  TIPO id {, TIPO id}
TIPO  int '[' ']'
 | boolean
 | int
 | id
CMD  '{' {CMD} '}'
 | if '(' EXP ')' CMD
 | if '(' EXP ')' CMD else CMD
 | while '(' EXP ')' CMD
 | System.out.println '(' EXP ')' ;
 | id = EXP ;
 | id '[' EXP ']' = EXP ;
EXP  EXP && REXP
 | REXP
REXP  REXP < AEXP
 | REXP == AEXP
 | REXP != AEXP
 | AEXP
AEXP  AEXP + MEXP
 | AEXP - MEXP
 | MEXP
MEXP  MEXP * SEXP
 | MEXP / SEXP
 | SEXP
SEXP  ! SEXP
 | - SEXP
 | true
 | false
 | num
| null
 | new int '[' EXP ']'
 | PEXP . length
 | PEXP '[' EXP ']'
 | PEXP
PEXP  id
 | this
 | new id '(' ')'
 | '(' EXP ')'
 | PEXP . id
 | PEXP . id '(' [EXPS] ')'
EXPS  EXP {, EXP}